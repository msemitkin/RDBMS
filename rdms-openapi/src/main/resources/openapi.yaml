openapi: 3.0.0
info:
  description: Title
  title: Title
  version: 1.0.0
paths:
  /databases:
    get:
      operationId: getDatabases
      summary: Get all databases
      tags:
        - databases
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: './components/Databases.yaml'
    post:
      operationId: createDatabase
      summary: Create a new database
      tags:
        - databases
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './components/CreateDatabase.yaml'
      responses:
        "200":
          description: Created
        "400":
          description: Failed to create a database. Database is invalid
          content:
            application/json:
              schema:
                $ref: './components/Error.yaml'
  /databases/{databaseName}/tables:
    get:
      operationId: getTables
      summary: Get tables
      tags:
        - tables
      parameters:
        - in: path
          name: databaseName
          schema:
            type: string
          required: true
          description: Name of the database to get tables
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: './components/Tables.yaml'
        "404":
          description: Database with such name does not exist
          content:
            application/json:
              schema:
                $ref: './components/Error.yaml'
    post:
      operationId: Create table
      summary: Create a table in the database
      tags:
        - tables
      parameters:
        - in: path
          name: databaseName
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './components/CreateTable.yaml'
      responses:
        "200":
          description: Created
        "400":
          description: Failed to create table
          content:
            application/json:
              schema:
                $ref: './components/Error.yaml'
        "404":
          description: Database does not exist
          content:
            application/json:
              schema:
                $ref: './components/Error.yaml'

  /databases/{databaseName}/tables/{tableName}:
    get:
      operationId: select
      summary: Select rows from the table
      tags:
        - tables
      parameters:
        - in: path
          name: databaseName
          schema:
            type: string
          required: true
          description: Name of the database to select data from
        - in: path
          name: tableName
          schema:
            type: string
          required: true
          description: Name of the table to select rows from
        - in: query
          name: sorting
          schema:
            $ref: '#/components/schemas/Sorting'
          required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rows'
        "404":
          description: Database or table does not exist
          content:
            application/json:
              schema:
                $ref: './components/Error.yaml'
    put:
      operationId: insert
      summary: Insert row into the table
      tags:
        - tables
      parameters:
        - in: path
          name: databaseName
          schema:
            type: string
          required: true
          description: Name of the database to insert into the table in
        - in: path
          name: tableName
          schema:
            type: string
          required: true
          description: Name of the table to insert into
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Insert'
      responses:
        "200":
          description: Inserted
        "400":
          description: Failed to insert into a table. Row is invalid
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: './components/Error.yaml'
                  - $ref: './components/ColumnTypeMismatchError.yaml'
        "404":
          description: Database or table does not exist
          content:
            application/json:
              schema:
                $ref: './components/Error.yaml'
    patch:
      operationId: update
      summary: Update table
      tags:
        - tables
      parameters:
        - in: path
          name: databaseName
          schema:
            type: string
          required: true
          description: Name of the database to update the table in
        - in: path
          name: tableName
          schema:
            type: string
          required: true
          description: Name of the table to update the rows in
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Update'
      responses:
        "200":
          description: Updated
        "400":
          description: Failed to update table. Request is invalid
          content:
            application/json:
              schema:
                $ref: './components/Error.yaml'
        "404":
          description: Database or table does not exist
          content:
            application/json:
              schema:
                $ref: './components/Error.yaml'
    delete:
      operationId: dropTable
      summary: Drop table
      tags:
        - tables
      parameters:
        - in: path
          name: databaseName
          schema:
            type: string
          required: true
          description: Name of the database to drop the table in
        - in: path
          name: tableName
          schema:
            type: string
          required: true
          description: Name of the table to drop
      responses:
        "200":
          description: Deleted
        "404":
          description: Database or table does not exist
          content:
            application/json:
              schema:
                $ref: './components/Error.yaml'
components:
  schemas:
    Insert:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/InsertRowColumnValue'
      required:
        - values
    Update:
      properties:
        where:
          $ref: '#/components/schemas/Where'
        set:
          $ref: '#/components/schemas/Set'
      required:
        - where
        - set
    Where:
      type: object
      additionalProperties: true
    Set:
      type: object
      additionalProperties: true
    ColumnValue:
      type: object
      properties:
        columnName:
          type: string
        value:
          type: object
    Row:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/ColumnValue'
    Rows:
      type: object
      properties:
        rows:
          type: array
          items:
            $ref: '#/components/schemas/Row'
    Sorting:
      type: object
      properties:
        sortingColumn:
          type: string
        sortingOrder:
          type: string
          enum:
            - ASC
            - DESC
      required:
        - sortingOrder
        - sortingColumn
    InsertRowColumnValue:
      type: object
      properties:
        columnName:
          type: string
        value:
          type: object
